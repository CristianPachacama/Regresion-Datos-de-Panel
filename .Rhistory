}
numerador=c(numerador,numerador_aux)
}
datos$Coe = -numerador/(datos$Boe)
return(list('datos'=datos,'modelo'=modelo))
}
# remove(analisisPanel)
#Generacion de Resumen Modelo
analisisPanel = regresionPanel(datos,n=3)
datosPanel = analisisPanel$datos
grafPanel(datosPanel)
View(datosPanel)
# Funcion que genera regresión ------------------
regresionPanel = function(datos,n = 3){
#Formula de orden n
formu = paste0("I(P^",1:n,")")
formu = paste(formu,collapse = "+")
formu = paste0("Bom ~ ", formu , " + factor(Pozo)*P")
formu = as.formula(formu)
#Modelo de Regresion
modelo <- lm(data=datos,formula = formu)
#summary(modelo)
datos$Boe <- predict(modelo,datos)
#Calculo de Co
betas = c()
for (i in 1:n) {
betas[i] = modelo$coefficients[i+1]
}
#Coeficientes de Factor POZO
ind_nomb = endsWith(x=names(modelo$coefficients),suffix = ":P")
alfas = modelo$coefficientes[ind_nomb]
alfas = c(0,alfas)
Pozos = unique(datos$Pozo)
numerador= c()
for(k in 1:length(Pozos)){
numerador_aux = 0
ind_pozo = datos$Pozo==Pozos[k]
P_aux = datos$P[ind_pozo]
for (j in 1:n) {
if(j==1){
numerador_aux = numerador_aux + j*(betas[j]+alfas[k])*(P_aux^(j-1))
}else{
numerador_aux = numerador_aux + j*betas[j]*(P_aux^(j-1))
}
}
numerador=c(numerador,numerador_aux)
}
datos$Coe = -numerador/(datos$Boe)
return(list('datos'=datos,'modelo'=modelo))
}
# remove(analisisPanel)
#Generacion de Resumen Modelo
analisisPanel = regresionPanel(datos,n=3)
datosPanel = analisisPanel$datos
# Funcion que genera regresión ------------------
regresionPanel = function(datos,n = 3){
#Formula de orden n
formu = paste0("I(P^",1:n,")")
formu = paste(formu,collapse = "+")
formu = paste0("Bom ~ ", formu , " + factor(Pozo)*P")
formu = as.formula(formu)
#Modelo de Regresion
modelo <- lm(data=datos,formula = formu)
#summary(modelo)
datos$Boe <- predict(modelo,datos)
#Calculo de Co
betas = c()
for (i in 1:n) {
betas[i] = modelo$coefficients[i+1]
}
#Coeficientes de Factor POZO
ind_nomb = endsWith(x=names(modelo$coefficients),suffix = ":P")
alfas = modelo$coefficients[ind_nomb]
alfas = c(0,alfas)
Pozos = unique(datos$Pozo)
numerador= c()
for(k in 1:length(Pozos)){
numerador_aux = 0
ind_pozo = datos$Pozo==Pozos[k]
P_aux = datos$P[ind_pozo]
for (j in 1:n) {
if(j==1){
numerador_aux = numerador_aux + j*(betas[j]+alfas[k])*(P_aux^(j-1))
}else{
numerador_aux = numerador_aux + j*betas[j]*(P_aux^(j-1))
}
}
numerador=c(numerador,numerador_aux)
}
datos$Coe = -numerador/(datos$Boe)
return(list('datos'=datos,'modelo'=modelo))
}
# remove(analisisPanel)
#Generacion de Resumen Modelo
analisisPanel = regresionPanel(datos,n=3)
datosPanel = analisisPanel$datos
summary(analisisPanel$modelo)
grafPanel(datosPanel)
grafPanel(datosPanel)
end
endsWith(c("ab1","ab21","ab324","ab"),suffix = "[0-9]")
endsWith(c("ab1","ab21","ab324","ab"),suffix = grep("[0-9]"))
endsWith(c("ab1","ab21","ab324","ab"),suffix = "[0-9]")
endsWith(c("ab1","ab21","ab324","ab"),suffix = "+[0-9]")
endsWith(c("ab1","ab21","ab324","ab"),suffix = "\[0-9]")
endsWith(c("ab1","ab21","ab324","ab"),suffix = "[0-9]")
# Funcion que genera regresión ------------------
regresionPanel = function(datos,n = 3){
#Formula de orden n
formu = paste0("I(P^",1:n,")")
formu = paste(formu,collapse = "+")
formu = paste0("Bom ~ ", formu , " + factor(Pozo)*P")
formu = as.formula(formu)
#Modelo de Regresion
modelo <- lm(data=datos,formula = formu)
#summary(modelo)
datos$Boe <- predict(modelo,datos)
#Calculo de Co
betas = c()
for (i in 1:n) {
betas[i] = modelo$coefficients[i+1]
}
#Coeficientes de Factor POZO
alfas0 = modelo$coefficients[5:(length(Pozos)-1)]
alfas0 = c(0,alfas0)
ind_nomb = endsWith(x=names(modelo$coefficients),suffix = ":P")
alfas = modelo$coefficients[ind_nomb]
alfas = c(0,alfas)
Pozos = unique(datos$Pozo)
numerador= c()
for(k in 1:length(Pozos)){
numerador_aux = 0
ind_pozo = datos$Pozo==Pozos[k]
P_aux = datos$P[ind_pozo]
for (j in 1:n) {
if(j==1){
numerador_aux = numerador_aux + j*(betas[j]+alfas[k])*(P_aux^(j-1)+alfas0[k])
}else{
numerador_aux = numerador_aux + j*betas[j]*(P_aux^(j-1))
}
}
numerador=c(numerador,numerador_aux)
}
datos$Coe = -numerador/(datos$Boe)
return(list('datos'=datos,'modelo'=modelo))
}
# remove(analisisPanel)
#Generacion de Resumen Modelo
analisisPanel = regresionPanel(datos,n=3)
datosPanel = analisisPanel$datos
summary(analisisPanel$modelo)
grafPanel(datosPanel)
# Funcion que genera regresión ------------------
regresionPanel = function(datos,n = 3){
#Formula de orden n
formu = paste0("I(P^",1:n,")")
formu = paste(formu,collapse = "+")
formu = paste0("Bom ~ ", formu , " + factor(Pozo)*P")
formu = as.formula(formu)
#Modelo de Regresion
modelo <- lm(data=datos,formula = formu)
#summary(modelo)
datos$Boe <- predict(modelo,datos)
#Calculo de Co
betas = c()
for (i in 1:n) {
betas[i] = modelo$coefficients[i+1]
}
#Coeficientes de Factor POZO
alfas0 = modelo$coefficients[5:(length(Pozos)-1)]
alfas0 = c(0,alfas0)
ind_nomb = endsWith(x=names(modelo$coefficients),suffix = ":P")
alfas = modelo$coefficients[ind_nomb]
alfas = c(0,alfas)
Pozos = unique(datos$Pozo)
numerador= c()
for(k in 1:length(Pozos)){
numerador_aux = 0
ind_pozo = datos$Pozo==Pozos[k]
P_aux = datos$P[ind_pozo]
for (j in 1:n) {
if(j==1){
numerador_aux = numerador_aux + j*(betas[j]+alfas[k])*(P_aux^(j-1))+alfas0[k]
}else{
numerador_aux = numerador_aux + j*betas[j]*(P_aux^(j-1))
}
}
numerador=c(numerador,numerador_aux)
}
datos$Coe = -numerador/(datos$Boe)
return(list('datos'=datos,'modelo'=modelo))
}
# remove(analisisPanel)
#Generacion de Resumen Modelo
analisisPanel = regresionPanel(datos,n=3)
datosPanel = analisisPanel$datos
summary(analisisPanel$modelo)
grafPanel(datosPanel)
# Funcion que genera regresión ------------------
regresionPanel = function(datos,n = 3){
#Formula de orden n
formu = paste0("I(P^",1:n,")")
formu = paste(formu,collapse = "+")
formu = paste0("Bom ~ ", formu , " + factor(Pozo)*P")
formu = as.formula(formu)
#Modelo de Regresion
modelo <- lm(data=datos,formula = formu)
#summary(modelo)
datos$Boe <- predict(modelo,datos)
#Calculo de Co
betas = c()
for (i in 1:n) {
betas[i] = modelo$coefficients[i+1]
}
#Coeficientes de Factor POZO
alfas0 = modelo$coefficients[5:(length(Pozos)-1)]
alfas0 = c(0,alfas0)
ind_nomb = endsWith(x=names(modelo$coefficients),suffix = ":P")
alfas = modelo$coefficients[ind_nomb]
alfas = c(0,alfas)
Pozos = unique(datos$Pozo)
numerador= c()
for(k in 1:length(Pozos)){
numerador_aux = alfas0[k]
ind_pozo = datos$Pozo==Pozos[k]
P_aux = datos$P[ind_pozo]
for (j in 1:n) {
if(j==1){
numerador_aux = numerador_aux + j*(betas[j]+alfas[k])*(P_aux^(j-1))
}else{
numerador_aux = numerador_aux + j*betas[j]*(P_aux^(j-1))
}
}
numerador=c(numerador,numerador_aux)
}
datos$Coe = -numerador/(datos$Boe)
return(list('datos'=datos,'modelo'=modelo))
}
# remove(analisisPanel)
#Generacion de Resumen Modelo
analisisPanel = regresionPanel(datos,n=3)
datosPanel = analisisPanel$datos
summary(analisisPanel$modelo)
grafPanel(datosPanel)
# Funcion que genera regresión ------------------
regresionPanel = function(datos,n = 3){
#Formula de orden n
formu = paste0("I(P^",1:n,")")
formu = paste(formu,collapse = "+")
formu = paste0("Bom ~ ", formu , " + factor(Pozo)*P")
formu = as.formula(formu)
#Modelo de Regresion
modelo <- lm(data=datos,formula = formu)
#summary(modelo)
datos$Boe <- predict(modelo,datos)
#Calculo de Co
betas = c()
for (i in 1:n) {
betas[i] = modelo$coefficients[i+1]
}
#Coeficientes de Factor POZO
alfas0 = modelo$coefficients[5:(length(Pozos)-1)]
alfas0 = c(0,alfas0)
ind_nomb = endsWith(x=names(modelo$coefficients),suffix = ":P")
alfas = modelo$coefficients[ind_nomb]
alfas = c(0,alfas)
Pozos = unique(datos$Pozo)
numerador= c()
for(k in 1:length(Pozos)){
numerador_aux = -alfas0[k]
ind_pozo = datos$Pozo==Pozos[k]
P_aux = datos$P[ind_pozo]
for (j in 1:n) {
if(j==1){
numerador_aux = numerador_aux + j*(betas[j]+alfas[k])*(P_aux^(j-1))
}else{
numerador_aux = numerador_aux + j*betas[j]*(P_aux^(j-1))
}
}
numerador=c(numerador,numerador_aux)
}
datos$Coe = -numerador/(datos$Boe)
return(list('datos'=datos,'modelo'=modelo))
}
# remove(analisisPanel)
#Generacion de Resumen Modelo
analisisPanel = regresionPanel(datos,n=3)
datosPanel = analisisPanel$datos
summary(analisisPanel$modelo)
grafPanel(datosPanel)
# Funcion que genera regresión ------------------
regresionPanel = function(datos,n = 3){
#Formula de orden n
formu = paste0("I(P^",1:n,")")
formu = paste(formu,collapse = "+")
formu = paste0("Bom ~ ", formu , " + factor(Pozo)*P")
formu = as.formula(formu)
#Modelo de Regresion
modelo <- lm(data=datos,formula = formu)
#summary(modelo)
datos$Boe <- predict(modelo,datos)
#Calculo de Co
betas = c()
for (i in 1:n) {
betas[i] = modelo$coefficients[i+1]
}
#Coeficientes de Factor POZO
alfas0 = modelo$coefficients[5:(length(Pozos)-1)]
alfas0 = c(0,alfas0)
ind_nomb = endsWith(x=names(modelo$coefficients),suffix = ":P")
alfas = modelo$coefficients[ind_nomb]
alfas = c(0,alfas)
Pozos = unique(datos$Pozo)
numerador= c()
for(k in 1:length(Pozos)){
numerador_aux = 0
ind_pozo = datos$Pozo==Pozos[k]
P_aux = datos$P[ind_pozo]
for (j in 1:n) {
if(j==1){
numerador_aux = numerador_aux + j*(betas[j]+alfas[k])*(P_aux^(j-1))
}else{
numerador_aux = numerador_aux + j*betas[j]*(P_aux^(j-1))
}
}
numerador=c(numerador,numerador_aux)
}
datos$Coe = -numerador/(datos$Boe)
return(list('datos'=datos,'modelo'=modelo))
}
# remove(analisisPanel)
#Generacion de Resumen Modelo
analisisPanel = regresionPanel(datos,n=3)
datosPanel = analisisPanel$datos
summary(analisisPanel$modelo)
grafPanel(datosPanel)
grafPanel(datosPanel)
#Grafico
grafPanel = function(datosPanel,n=3){
Pozos = unique(datosPanel$Pozo)
for(pozo in Pozos){
datos_aux = datosPanel[datosPanel$Pozo==pozo,]
par(mfrow=c(1,2),oma = c(0, 0, 2, 0))
plot(datos_aux$P,datos_aux$Bom, xlab = "Presión",ylab = "Bom & Boe")
lines(datos_aux$P,datos_aux$Boe,col='red')
plot(datos_aux$P,datos_aux$Com, xlab = "Presión",ylab = "Com & Coe")
lines(datos_aux$P,datos_aux$Coe,col='red')
mtext(paste("Regresion Polinomial, n=",n),outer = TRUE,cex = 1.5)
}
}
grafPanel(datosPanel)
# Funcion que genera regresión ------------------
regresionPanel = function(datos,n = 3){
#Formula de orden n
formu = paste0("I(P^",1:n,")")
formu = paste(formu,collapse = "+")
formu = paste0("Bom ~ ", formu , " + factor(Pozo)*P")
formu = as.formula(formu)
#Modelo de Regresion
modelo <- lm(data=datos,formula = formu)
#summary(modelo)
datos$Boe <- predict(modelo,datos)
#Calculo de Co
betas = c()
for (i in 1:n) {
betas[i] = modelo$coefficients[i+1]
}
#Coeficientes de Factor POZO
alfas0 = modelo$coefficients[5:(length(Pozos)-1)]
alfas0 = c(0,alfas0)
ind_nomb = endsWith(x=names(modelo$coefficients),suffix = ":P")
alfas = modelo$coefficients[ind_nomb]
alfas = c(0,alfas)
Pozos = unique(datos$Pozo)
numerador= c()
for(k in 1:length(Pozos)){
numerador_aux = 0
ind_pozo = datos$Pozo==Pozos[k]
P_aux = datos$P[ind_pozo]
for (j in 1:n) {
if(j==1){
numerador_aux = numerador_aux + j*(betas[j])*(P_aux^(j-1))+alfas[k]
}else{
numerador_aux = numerador_aux + j*betas[j]*(P_aux^(j-1))
}
}
numerador=c(numerador,numerador_aux)
}
datos$Coe = -numerador/(datos$Boe)
return(list('datos'=datos,'modelo'=modelo))
}
# remove(analisisPanel)
#Generacion de Resumen Modelo
analisisPanel = regresionPanel(datos,n=3)
datosPanel = analisisPanel$datos
summary(analisisPanel$modelo)
#Grafico
grafPanel = function(datosPanel,n=3){
Pozos = unique(datosPanel$Pozo)
for(pozo in Pozos){
datos_aux = datosPanel[datosPanel$Pozo==pozo,]
par(mfrow=c(1,2),oma = c(0, 0, 2, 0))
plot(datos_aux$P,datos_aux$Bom, xlab = "Presión",ylab = "Bom & Boe")
lines(datos_aux$P,datos_aux$Boe,col='red')
plot(datos_aux$P,datos_aux$Com, xlab = "Presión",ylab = "Com & Coe")
lines(datos_aux$P,datos_aux$Coe,col='red')
mtext(paste("Regresion Polinomial, n=",n),outer = TRUE,cex = 1.5)
}
}
grafPanel(datosPanel)
# Funcion que genera regresión ------------------
regresionPanel = function(datos,n = 3){
#Formula de orden n
formu = paste0("I(P^",1:n,")")
formu = paste(formu,collapse = "+")
formu = paste0("Bom ~ ", formu , " + factor(Pozo)*P")
formu = as.formula(formu)
#Modelo de Regresion
modelo <- lm(data=datos,formula = formu)
#summary(modelo)
datos$Boe <- predict(modelo,datos)
#Calculo de Co
betas = c()
for (i in 1:n) {
betas[i] = modelo$coefficients[i+1]
}
#Coeficientes de Factor POZO
alfas0 = modelo$coefficients[5:(length(Pozos)-1)]
alfas0 = c(0,alfas0)
ind_nomb = endsWith(x=names(modelo$coefficients),suffix = ":P")
alfas = modelo$coefficients[ind_nomb]
alfas = c(0,alfas)
Pozos = unique(datos$Pozo)
numerador= c()
for(k in 1:length(Pozos)){
numerador_aux = 0
ind_pozo = datos$Pozo==Pozos[k]
P_aux = datos$P[ind_pozo]
for (j in 1:n) {
if(j==1){
numerador_aux = numerador_aux + j*(betas[j])*(P_aux^(j-1))+alfas[k]
}else{
numerador_aux = numerador_aux + j*betas[j]*(P_aux^(j-1))
}
}
numerador=c(numerador,numerador_aux)
}
datos$Coe = -numerador/(datos$Boe)
return(list('datos'=datos,'modelo'=modelo))
}
# remove(analisisPanel)
#Generacion de Resumen Modelo
analisisPanel = regresionPanel(datos,n=3)
datosPanel = analisisPanel$datos
summary(analisisPanel$modelo)
#Grafico
grafPanel = function(datosPanel,n=3){
Pozos = unique(datosPanel$Pozo)
for(pozo in Pozos){
datos_aux = datosPanel[datosPanel$Pozo==pozo,]
par(mfrow=c(1,2),oma = c(0, 0, 2, 0))
plot(datos_aux$P,datos_aux$Bom, xlab = "Presión",ylab = "Bom & Boe")
lines(datos_aux$P,datos_aux$Boe,col='red')
plot(datos_aux$P,datos_aux$Com, xlab = "Presión",ylab = "Com & Coe")
lines(datos_aux$P,datos_aux$Coe,col='red')
mtext(paste("Regresion Polinomial, n=",n),outer = TRUE,cex = 1.5)
}
}
grafPanel(datosPanel)
remove(analisisPanel)
# remove(analisisPanel)
#Generacion de Resumen Modelo
analisisPanel = regresionPanel(datos,n=3)
datosPanel = analisisPanel$datos
summary(analisisPanel$modelo)
#Grafico
grafPanel = function(datosPanel,n=3){
Pozos = unique(datosPanel$Pozo)
for(pozo in Pozos){
datos_aux = datosPanel[datosPanel$Pozo==pozo,]
par(mfrow=c(1,2),oma = c(0, 0, 2, 0))
plot(datos_aux$P,datos_aux$Bom, xlab = "Presión",ylab = "Bom & Boe")
lines(datos_aux$P,datos_aux$Boe,col='red')
plot(datos_aux$P,datos_aux$Com, xlab = "Presión",ylab = "Com & Coe")
lines(datos_aux$P,datos_aux$Coe,col='red')
mtext(paste("Regresion Polinomial, n=",n),outer = TRUE,cex = 1.5)
}
}
grafPanel(datosPanel)
library(ggplot2)
library(plotly)
grafBom = ggplot(data=datos, aes(x=P, y=Bom, colour=factor(Pozo))) +
geom_line() + geom_point() + ggtitle("Gráfico Pozos")
ggplotly(grafBom)
grafCom =ggplot(data=datos, aes(x=P, y=Com, colour=factor(Pozo))) +
geom_line() + geom_point()+ ggtitle("Gráfico Pozos")
ggplotly(grafCom)
View(datos)
modelo2 = lm(data=datos, Com ~ P + Tr + Bom + API + Rg)
summary(modelo2)
anova(modelo2)
modelo2 = glm(data=datos, Com ~ P*Tr*Bom*API*Rg)
summary(modelo2)
modelo2 = lm(data=datos, Com ~ P + Tr + Bom + API + Rg)
summary(modelo2)
datos_aux2 = datos
datos_aux2$Com = predict(modelo2,datos_aux2)
View(datos_aux2)
datos_aux2 = datos
datos_aux2$Coe = predict(modelo2,datos_aux2)
View(datos_aux2)
plot(datos_aux2$Com,datos_aux2$Coe)
